#!/usr/bin/env node

const path = require('path');
const fs = require('fs-extra');
const program = require('commander');
const chalk = require('chalk');
const ora = require('ora');
const vfs = require('vinyl-fs');
const through2 = require('through2');
const leftPad = require('left-pad');
const npmInstall = require('./install');

const message = {
  success(text) {
    console.log(chalk.green.bold(text));
  },
  error(text) {
    console.log(chalk.red.bold(text));
  },
  info(type, message) {
    console.log(`${chalk.cyan.bold(leftPad(type, 12))}  ${message}`);
  }
};

console.log(111111111);

program
  .command('new [name]')
  .alias('n')
  .description('create a new project')
  .action(function(name) {
    // create a new project
    console.log(22222222);

    if (!name) {
      message.error("The name of project can't be null!");
      process.exit();
    }
    const projectDir = path.join(process.cwd(), name);
    if (fs.existsSync(projectDir)) {
      message.error('The folder already exists!');
      process.exit();
    }
    fs.mkdirpSync(projectDir);
    process.chdir(projectDir);
    const cwd = path.join(__dirname, '../template');
    const dest = process.cwd();
    const projectName = path.basename(dest);
    const spinner = ora('downloading template \n');
    spinner.start();
    vfs
      .src(['**/*', '!node_modules/**/*'], {
        cwd: cwd,
        cwdbase: true,
        dot: true
      })
      .pipe(template(cwd))
      .pipe(vfs.dest(dest))
      .on('end', function() {
        spinner.stop();
        message.success('\n download success! \n');
        message.info('run', ' npm install');
        npmInstall(function() {
          // success install callback
          message.success(`Successfully create ${projectName} at ${dest}.`);
        });
      })
      .resume();
  })
  .parse(process.argv);

function template(cwd) {
  return through2.obj(function(file, enc, cb) {
    if (!file.stat.isFile()) {
      return cb();
    }
    message.info('create', file.path.replace(cwd + '/', ''));
    this.push(file);
    cb();
  });
}
